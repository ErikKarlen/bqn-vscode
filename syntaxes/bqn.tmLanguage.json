{
    "comment": "Reference to the Oniguruma Regex library:\n  https://github.com/kkos/oniguruma/blob/master/doc/RE\n\n* The reference version for this TextMate grammar is the YAML version here:\n  https://github.com/tikkanz/j-vscode/blob/master/syntaxes/j.tmLanguage.yaml\n  Convert to other formats (JSON, PLIST) using utils (e.g. TextMate Languages extension for VS Code)\n* Some in comments throughout the grammar\n",
    "name": "BQN",
    "scopeName": "source.bqn",
    "fileTypes": ["bqn"],
    "patterns": [
      {
        "include": "#bracket"
      },
      {
        "include": "#number"
      },
      {
        "include": "#name"
      },
      {
        "include": "#operator"
      },
      {
        "include": "#variable"
      },
      {
        "include": "#string"
      },
      {
        "include": "#comment"
      },
      {
        "include": "#entity"
      }
    ],
    "repository": {
      "bracket": {
        "patterns": [
          {
            "name": "meta.bracket.bqn",
            "match": "(\\(|\\))"
          }
        ]
      },
      "number": {
        "patterns": [
            {
                "name": "constant.numeric.BQN",
                "match": "(?<![A-Z_a-z0-9œÄ‚àû¬Ø])¬Ø?(¬Ø_*)?((\\d[\\d_]*(\\.\\d[\\d_]*)?|œÄ_*)([eE]_*(¬Ø_*)?\\d[\\d_]*)?|‚àû_*)(i_*(¬Ø_*)?((\\d[\\d_]*(\\.\\d[\\d_]*)?|œÄ_*)([eE]_*(¬Ø_*)?\\d[\\d_]*)?|‚àû_*))?"
            }
        ]
    },
      "entity": {
        "patterns": [
          {
            "comment": "BQN 1-modifier",
            "name": "entity.name.function.modifier2.bqn",
            "match": "([ÀôÀúÀò¬®¬¥Àù`‚åú‚Åº]|_[A-Za-zùï£][A-Za-z¬ØœÄ‚àû0-9]*)"
          }
        ]
      },
      "operator": {
        "patterns": [
          {
            "comment": "BQN 2-modifier",
            "name": "keyword.operator.modifier2.bqn",
            "match": "([‚àò‚óã‚ä∏‚üú‚åæ‚äò‚ó∂‚éä‚éâ‚öá‚çü]|_[A-Za-zùï£][A-Za-z¬ØœÄ‚àû0-9]*_)"
          }
        ]
      },
      "variable": {
        "patterns": [
            {
                "comment": "BQN function",
                "name": "constant.language.function.bqn",
                "match": "[ùîΩùîæùïéùïèùïä+\\-√ó√∑‚ãÜ‚àö‚åä‚åà|¬¨‚àß‚à®<>‚â†=‚â§‚â•‚â°‚â¢‚ä£‚ä¢‚•ä‚àæ‚âç‚ãà‚Üë‚Üì‚Üï¬´¬ª‚åΩ‚çâ/‚çã‚çí‚äè‚äë‚äê‚äí‚àä‚ç∑‚äî!‚çï‚çé]|‚Ä¢?\\b[A-Z][A-Z_a-z0-9œÄ‚àû¬Ø]*"
            }
        ]
      },
      "string": {
        "patterns": [
          {
            "comment": "single quote string",
            "name": "string.quoted.single.bqn",
            "match": "'(.|\\n)'",
            "captures": {
              "1": {
                "name": "punctuation.definition.string.begin.bqn"
              },
              "2": {
                "name": "punctuation.definition.string.end.bqn"
              }
            }
          },
          {
            "comment": "double quote string",
            "name": "string.quoted.double.bqn",
            "match": "(\")[^\"]*(?:\"\"[^\"]*)*(\")",
            "captures": {
              "1": {
                "name": "punctuation.definition.string.begin.bqn"
              },
              "2": {
                "name": "punctuation.definition.string.end.bqn"
              }
            }
          }
        ]
      },
      
      "comment": {
        "patterns": [
            {
                "name": "comment.line.bqn",
                "begin": "#",
                "end": "$",
                "captures": {
                    "0": {
                        "name": "punctuation.definition.comment.bqn"
                    }
                }
            }
        ]
      }
    }
  }